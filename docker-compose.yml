version: "3"

services:
  proxy:
    depends_on:
      - nginx
      - flask
      # - janus
    image: nginx:alpine
    container_name: proxyserver 
    restart: always 
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./proxyserver/nginx.conf:/etc/nginx/nginx.conf
      - ./certbot:/etc/letsencrypt
      - ./webpage:/usr/share/nginx/html

  nginx:
    image: nginx:latest
    container_name: webpage
    restart: always
    volumes:
      - ./webpage:/usr/share/nginx/html

  flask:
    build:
      context: ./flask
      dockerfile: Dockerfile
    restart: always
    container_name: api
    command: gunicorn -k eventlet -w 1 wsgi:server --bind 0.0.0.0:80
    environment:
      DATABASE_URL: postgresql://flaskuser:flaskpassword@db/flaskdb
    depends_on:
      - db

  db:
    image: postgres:latest
    container_name: postgresdb
    volumes:
      - ./db:/var/lib/postgresql/data
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: "flaskdb"
      POSTGRES_USER: "flaskuser"
      POSTGRES_PASSWORD: "flaskpassword"
  
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    restart: unless-stopped
    ports:
      - "5555:80"
    volumes:
      - ./pgadmin:/var/lib/pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=example@pgadmin.com
      - PGADMIN_DEFAULT_PASSWORD=pgadmin
      - TZ=Asia/Seoul
    depends_on:
      - db

  # janus:
  #   image: 'sucwangsr/janus-webrtc-gateway-docker:1.2.1-slim'
  #   command: /usr/local/bin/janus -F /usr/local/etc/janus   # Janus 이미지
  #   container_name: janusserver
  #   restart: always
  #   volumes:
  #     - "./janus/conf/janus.transport.http.jcfg:/usr/local/etc/janus/janus.transport.http.jcfg"  # open adminapi config
  #     - "./janus/conf/janus.jcfg:/usr/local/etc/janus/janus.jcfg"
  #     - "./janus/conf/janus.plugin.videoroom.jcfg:/usr/local/etc/janus/janus.plugin.videoroom.jcfg"   # Janus 설정 파일
  #     - "./janus/conf/janus.transport.websockets.jcfg:/usr/local/etc/janus/janus.transport.websockets.jcfg"
  #   ports:
  #     - "8088:8088"  # HTTP API 포트
  #     - "8188:8188"  # WebSocket API 포트
  #     # - "8089:8089"  # HTTPS API 포트 (SSL)
  #     - "10000-10200:10000-10200/udp" # WebRTC 미디어 포트
  #     - "7088:7088"
  #   # depends_on:
  #   #   - nginx    # Nginx 의존성 설정 (옵셔널)

  certbot:
    depends_on:
      - proxy 
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot:/etc/letsencrypt
      - ./webpage:/usr/share/nginx/html
    command: certonly --webroot --webroot-path=/usr/share/nginx/html --email test@test.com --agree-tos --no-eff-email --keep-until-expiring -d rtctest.p-e.kr